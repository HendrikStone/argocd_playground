apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-app
  namespace: sample-app
  annotations:
    author: Hendrik Stein <hstein@jastech-solutions.de>
spec:
  selector:
    matchLabels:
      app: backend-app
  template:
    metadata:
      labels:
        app: backend-app
      annotations:
        author: Hendrik Stein <hstein@jastech-solutions.de>
    spec:
      containers:
      - name: backend-app
        image: ghcr.io/hendrikstone/argocd_service_playground:v0.0.5
        env:
        - name: key
          value: dev
        ports:
        - name: http
          containerPort: 3000
        resources:
          limits:
            memory: "64Mi"
            cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: backend-app
  namespace: sample-app
  annotations:
    author: Hendrik Stein <hstein@jastech-solutions.de>
    # The service works as a loadbalancer who knows the pods by selector
spec:
  selector:
    app: backend-app
  ports:
  - name: http
    port: 80
    targetPort: http #This must match the name of the port in the container(byName)
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: backend-app
  namespace: sample-app
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  entryPoints:
  - web
  routes:
  - kind: Rule
    match: PathPrefix(`/backend-appX`) #https://doc.traefik.io/traefik/routing/routers/
    middlewares:
    - name: backend-app
      namespace: sample-app
    priority: 10
    services:
    - name: backend-app
      namespace: sample-app
      port: 80
---
# All resources definition must be declared
# Prefixing with /backend-app
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: backend-app
  namespace: sample-app
spec:
  stripPrefix:
    prefixes:
    - "/backend-app"
    forceSlash: false
