apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-app
  namespace: sample-app
  annotations:
    author: Hendrik Stein <hstein@jastech-solutions.de>
spec:
  selector:
    matchLabels:
      app: backend-app
  template:
    metadata:
      labels:
        app: backend-app
      annotations:
        author: Hendrik Stein <hstein@jastech-solutions.de>
    spec:
      containers:
      - name: backend-app
        image: ghcr.io/hendrikstone/argocd_service_playground:v0.0.5
        env:
        - name: key
          value: dev
        ports:
        - name: http
          containerPort: 3000
        resources:
          limits:
            memory: "64Mi"
            cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: backend-app
  namespace: sample-app
  annotations:
    author: Hendrik Stein <hstein@jastech-solutions.de>
    # The service works as a loadbalancer who knows the pods by selector
spec:
  selector:
    app: backend-app
  ports:
  - name: http
    port: 80
    targetPort: http #This must match the name of the port in the container(byName)
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: backend-app
  namespace: sample-app
spec:
  rules:
  #- host: backend-sample-app.dev
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: backend-app
            port:
              number: 80
#      - backend:
#          service:
#            name: backend-app
#            port:
#              number: 80
#        pathType: ImplementationSpecific
# ---
# apiVersion: traefik.io/v1alpha1
# kind: IngressRoute
# metadata:
#   name: backend-app
#   namespace: sample-app
# spec:
#   entryPoints:
#   - backend-app
#   routes:
#   - kind: Rule
#     match: Host(`backend-sample-app.dev`)
#     middlewares:
#     - name: middleware1
#       namespace: default
#     priority: 10
#     services:
#     - kind: Service
#       name: backend-app
#       namespace: default
#       passHostHeader: true
#       port: 80
#       responseForwarding:
#         flushInterval: 1ms
#       scheme: https
#       sticky:
#         cookie:
#           httpOnly: true
#           name: cookie
#           secure: true
#       strategy: RoundRobin
#       weight: 10
# ---
# # All resources definition must be declared
# # Prefixing with /backend-app
# apiVersion: traefik.io/v1alpha1
# kind: Middleware
# metadata:
#   name: backend-app
#   namespace: sample-app
# spec:
#   addPrefix:
#     prefix: /backend-app
