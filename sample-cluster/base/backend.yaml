apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-app
  namespace: sample-app
  annotations:
    author: Hendrik Stein <hstein@jastech-solutions.de>
spec:
  selector:
    matchLabels:
      app: backend-app
  template:
    metadata:
      labels:
        app: backend-app
      annotations:
        author: Hendrik Stein <hstein@jastech-solutions.de>
    spec:
      containers:
      - name: backend-app
        image: ghcr.io/hendrikstone/argocd_service_playground:v0.0.5
        env:
        - name: key
          value: dev
        ports:
        - name: http
          containerPort: 3000
        resources:
          limits:
            memory: "64Mi"
            cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: backend-app
  namespace: sample-app
  annotations:
    author: Hendrik Stein <hstein@jastech-solutions.de>
    # The service works as a loadbalancer who knows the pods by selector
spec:
  selector:
    app: backend-app
  ports:
  - name: http
    port: 80
    targetPort: http #This must match the name of the port in the container(byName)
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: backend-app
  namespace: sample-app
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  entryPoints:
  - web
  routes:
  - kind: Rule
    match: PathPrefix(`/backend-app`)
    middlewares:
    - name: backend-app-dev
      namespace: sample-app
    priority: 10
    services:
    - name: backend-app-dev
      namespace: sample-app
      port: 80
      # - kind: Service
      #   name: backend-app
      #   namespace: sample-app
      #   passHostHeader: true
---
# All resources definition must be declared
# Prefixing with /backend-app
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: backend-app
  namespace: sample-app
spec:
  stripPrefix:
    prefixes:
    - "/backend-app"
    forceSlash: false

# ---
# apiVersion: traefik.io/v1alpha1
# kind: IngressRouteTCP
# metadata:
#   name: ingressroute.tcp
#   namespace: default

# spec:
#   entryPoints:
#   - tcpep
#   routes:
#   - match: HostSNI(`bar`)
#     services:
#     - name: whoamitcp
#       port: 8080
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: backend-app
#   namespace: sample-app
# spec:
#   rules:
#   #- host: backend-sample-app.dev
#   - http:
#       paths:
#       - path: /backend-app #=>>>>> Prefix to /
#         pathType: Prefix
#         backend:
#           service:
#             name: backend-app
#             port:
#               number: 80
#      - backend:
#          service:
#            name: backend-app
#            port:
#              number: 80
#        pathType: ImplementationSpecific
