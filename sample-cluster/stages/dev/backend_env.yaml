apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-app
  namespace: sample-app
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1 # wieviele zusätzliche für zero downtime
      maxUnavailable: 0
  selector:
    matchLabels:
      app: backend-app
  template:
    spec:
      containers:
      - name: backend-app
        image: ghcr.io/hendrikstone/argocd_service_playground:v0.0.5
        env:
        - name: key
          value: dev
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m" # minimum 0.25 CPU
          limits:
            memory: "128Mi"
            cpu: "1000m" # maximal 1 CPU
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 10
#        envFrom:
#        - configMapRef:
#            name: app-config
#        - secretRef:
#            name: credentials
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: backend-app
  namespace: sample-app
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  entryPoints:
  - web
  routes:
  - kind: Rule
    match: PathPrefix(`/backend-app`)
    middlewares:
    - name: backend-app-dev
      namespace: sample-app
    priority: 10
    services:
    - name: backend-app-dev
      namespace: sample-app
      port: 80
